{"remainingRequest":"/Users/tobeysimpson/my-gridsome-site/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/tobeysimpson/my-gridsome-site/node_modules/gridsome/app/page-query/index.js","dependencies":[{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/gridsome/app/page-query/index.js","mtime":1554172634699},{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/cache-loader/dist/cjs.js","mtime":1554172634942},{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/babel-loader/lib/index.js","mtime":1553985690434}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport { getResults, formatError } from './shared';\nvar merge = Vue.config.optionMergeStrategies;\nexport default (function (_ref) {\n  var options = _ref.options;\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (options.__pageQuery) {\n    options.__pageQuery = query;\n    return;\n  }\n\n  options.__pageQuery = query;\n  options.computed = merge.computed({\n    $page: function $page() {\n      return process.isServer ? this.$ssrContext.pageQuery.data : getResults(this.$route.path);\n    }\n  }, options.computed);\n\n  if (process.isClient) {\n    var createRouteGuard = function createRouteGuard(hook) {\n      options[hook] = merge[hook]([createGuardFunc(options)], options[hook]);\n    };\n\n    var createGuardFunc = function createGuardFunc() {\n      return function (to, from, next) {\n        import(\n        /* webpackChunkName: \"page-query\" */\n        './fetch').then(function (m) {\n          m.default(to, options.__pageQuery).then(function () {\n            return next();\n          }).catch(function (err) {\n            if (err.code === 'MODULE_NOT_FOUND') {\n              console.error(err); // eslint-disable-line\n\n              next({\n                name: '*',\n                params: {\n                  0: to.path\n                }\n              });\n            } else {\n              formatError(err, to);\n            }\n          });\n        });\n      };\n    };\n\n    createRouteGuard('beforeRouteEnter');\n    createRouteGuard('beforeRouteUpdate');\n  }\n});",null]}