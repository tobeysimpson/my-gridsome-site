{"remainingRequest":"/Users/tobeysimpson/my-gridsome-site/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/tobeysimpson/my-gridsome-site/node_modules/gridsome/app/directives/image.js","dependencies":[{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/gridsome/app/directives/image.js","mtime":1554172634699},{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/cache-loader/dist/cjs.js","mtime":1554172634942},{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/babel-loader/lib/index.js","mtime":1553985690434}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.ends-with\";\nimport _Array$from from \"/Users/tobeysimpson/my-gridsome-site/node_modules/@babel/runtime-corejs2/core-js/array/from\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport caniuse from '../utils/caniuse';\nimport { createObserver } from '../utils/intersectionObserver';\nvar observer = caniuse.IntersectionObserver ? createObserver(intersectionHandler) : null;\nexport default {\n  inserted: function inserted(el) {\n    observe(el);\n  },\n  update: function update(el) {\n    observe(el);\n  },\n  unbind: function unbind(el) {\n    unobserve(el);\n  }\n};\n\nfunction intersectionHandler(_ref) {\n  var intersectionRatio = _ref.intersectionRatio,\n      target = _ref.target;\n\n  if (intersectionRatio > 0) {\n    observer.unobserve(target);\n    loadImage(target);\n  }\n}\n\nfunction observe(el) {\n  if (el.tagName !== 'IMG') {\n    observeHtml(el);\n  } else {\n    if (!observer) loadImage(el);else observer.observe(el);\n  }\n}\n\nfunction unobserve(el) {\n  if (el.tagName !== 'IMG') {\n    unobserveHtml(el);\n  } else if (observer) {\n    observer.unobserve(el);\n  }\n}\n\nfunction observeHtml() {\n  var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var images = context.querySelectorAll('[data-src]');\n\n  if (observer) {\n    images.forEach(function (el) {\n      return !el.__vue__ && observer.observe(el);\n    });\n  } else {\n    _Array$from(images).forEach(function (el) {\n      return !el.__vue__ && loadImage(el);\n    });\n  }\n}\n\nfunction unobserveHtml() {\n  var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\n  if (observer) {\n    context.querySelectorAll('[data-src]').forEach(function (el) {\n      if (!el.__vue__) observer.unobserve(el);\n    });\n  }\n}\n\nfunction loadImage(el) {\n  var src = el.getAttribute('data-src');\n  var sizes = el.getAttribute('data-sizes');\n  var srcset = el.getAttribute('data-srcset');\n\n  if (!src || el.src.endsWith(src)) {\n    return; // src is already switched\n  }\n\n  var image = new Image();\n\n  image.onload = function () {\n    el.classList.remove('g-image--loading');\n    el.classList.add('g-image--loaded');\n    el.src = src;\n    el.sizes = sizes;\n    el.srcset = srcset;\n  };\n\n  image.src = src;\n  el.classList.add('g-image--loading');\n  el.classList.remove('g-image--loaded');\n}",null]}