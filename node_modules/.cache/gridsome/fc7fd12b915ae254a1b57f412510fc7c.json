{"remainingRequest":"/Users/tobeysimpson/my-gridsome-site/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/tobeysimpson/my-gridsome-site/node_modules/gridsome/app/page-query/index.js","dependencies":[{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/gridsome/app/page-query/index.js","mtime":1554172634699},{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/cache-loader/dist/cjs.js","mtime":1554172634942},{"path":"/Users/tobeysimpson/my-gridsome-site/node_modules/babel-loader/lib/index.js","mtime":1553985690434}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport { getResults, formatError } from './shared';\nvar merge = Vue.config.optionMergeStrategies;\nexport default (function (_ref) {\n  var options = _ref.options;\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (options.__pageQuery) {\n    options.__pageQuery = query;\n    return;\n  }\n\n  options.__pageQuery = query;\n  options.computed = merge.computed({\n    $page: function $page() {\n      return process.isServer ? this.$ssrContext.pageQuery.data : getResults(this.$route.path);\n    }\n  }, options.computed);\n\n  if (process.isClient) {\n    var createRouteGuard = function createRouteGuard(hook) {\n      options[hook] = merge[hook]([createGuardFunc(options)], options[hook]);\n    };\n\n    var createGuardFunc = function createGuardFunc() {\n      return function (to, from, next) {\n        import(\n        /* webpackChunkName: \"page-query\" */\n        './fetch').then(function (m) {\n          m.default(to, options.__pageQuery).then(function () {\n            return next();\n          }).catch(function (err) {\n            if (err.code === 'MODULE_NOT_FOUND') {\n              console.error(err); // eslint-disable-line\n\n              next({\n                name: '*',\n                params: {\n                  0: to.path\n                }\n              });\n            } else {\n              formatError(err, to);\n            }\n          });\n        });\n      };\n    };\n\n    createRouteGuard('beforeRouteEnter');\n    createRouteGuard('beforeRouteUpdate');\n  }\n});",{"version":3,"sources":["/Users/tobeysimpson/my-gridsome-site/node_modules/gridsome/app/page-query/index.js"],"names":["Vue","getResults","formatError","merge","config","optionMergeStrategies","options","query","__pageQuery","computed","$page","process","isServer","$ssrContext","pageQuery","data","$route","path","isClient","createRouteGuard","hook","createGuardFunc","to","from","next","then","m","default","catch","err","code","console","error","name","params"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,UAAxC;AAEA,IAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWC,qBAAzB;AAEA,gBAAe,gBAA+B;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAjBC,KAAiB,uEAAT,IAAS;;AAC5C,MAAID,OAAO,CAACE,WAAZ,EAAyB;AACvBF,IAAAA,OAAO,CAACE,WAAR,GAAsBD,KAAtB;AACA;AACD;;AAEDD,EAAAA,OAAO,CAACE,WAAR,GAAsBD,KAAtB;AAEAD,EAAAA,OAAO,CAACG,QAAR,GAAmBN,KAAK,CAACM,QAAN,CAAe;AAChCC,IAAAA,KADgC,mBACvB;AACP,aAAOC,OAAO,CAACC,QAAR,GACH,KAAKC,WAAL,CAAiBC,SAAjB,CAA2BC,IADxB,GAEHd,UAAU,CAAC,KAAKe,MAAL,CAAYC,IAAb,CAFd;AAGD;AAL+B,GAAf,EAMhBX,OAAO,CAACG,QANQ,CAAnB;;AAQA,MAAIE,OAAO,CAACO,QAAZ,EAAsB;AACpB,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI,EAAI;AAC/Bd,MAAAA,OAAO,CAACc,IAAD,CAAP,GAAgBjB,KAAK,CAACiB,IAAD,CAAL,CAAY,CAACC,eAAe,CAACf,OAAD,CAAhB,CAAZ,EAAwCA,OAAO,CAACc,IAAD,CAA/C,CAAhB;AACD,KAFD;;AAIA,QAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,aAAO,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACzB;AAAO;AAAqC,iBAA5C,EAAuDC,IAAvD,CAA4D,UAAAC,CAAC,EAAI;AAC/DA,UAAAA,CAAC,CAACC,OAAF,CAAUL,EAAV,EAAchB,OAAO,CAACE,WAAtB,EACGiB,IADH,CACQ;AAAA,mBAAMD,IAAI,EAAV;AAAA,WADR,EAEGI,KAFH,CAES,UAAAC,GAAG,EAAI;AACZ,gBAAIA,GAAG,CAACC,IAAJ,KAAa,kBAAjB,EAAqC;AACnCC,cAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd,EADmC,CAChB;;AACnBL,cAAAA,IAAI,CAAC;AAAES,gBAAAA,IAAI,EAAE,GAAR;AAAaC,gBAAAA,MAAM,EAAE;AAAE,qBAAGZ,EAAE,CAACL;AAAR;AAArB,eAAD,CAAJ;AACD,aAHD,MAGO;AACLf,cAAAA,WAAW,CAAC2B,GAAD,EAAMP,EAAN,CAAX;AACD;AACF,WATH;AAUD,SAXD;AAYD,OAbD;AAcD,KAfD;;AAiBAH,IAAAA,gBAAgB,CAAC,kBAAD,CAAhB;AACAA,IAAAA,gBAAgB,CAAC,mBAAD,CAAhB;AACD;AACF,CAzCD","sourcesContent":["import Vue from 'vue'\nimport { getResults, formatError } from './shared'\n\nconst merge = Vue.config.optionMergeStrategies\n\nexport default ({ options }, query = true) => {\n  if (options.__pageQuery) {\n    options.__pageQuery = query\n    return\n  }\n\n  options.__pageQuery = query\n\n  options.computed = merge.computed({\n    $page () {\n      return process.isServer\n        ? this.$ssrContext.pageQuery.data\n        : getResults(this.$route.path)\n    }\n  }, options.computed)\n\n  if (process.isClient) {\n    const createRouteGuard = hook => {\n      options[hook] = merge[hook]([createGuardFunc(options)], options[hook])\n    }\n\n    const createGuardFunc = () => {\n      return (to, from, next) => {\n        import(/* webpackChunkName: \"page-query\" */ './fetch').then(m => {\n          m.default(to, options.__pageQuery)\n            .then(() => next())\n            .catch(err => {\n              if (err.code === 'MODULE_NOT_FOUND') {\n                console.error(err) // eslint-disable-line\n                next({ name: '*', params: { 0: to.path }})\n              } else {\n                formatError(err, to)\n              }\n            })\n        })\n      }\n    }\n\n    createRouteGuard('beforeRouteEnter')\n    createRouteGuard('beforeRouteUpdate')\n  }\n}\n"]}]}